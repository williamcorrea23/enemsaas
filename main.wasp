app EnemWiseAI {  wasp: {    version: "^0.13.0"  },  title: "EnemWiseAI",  client: {    rootComponent: import { Layout } from "@src/Layout.jsx"  },  db: {    prisma: {      clientPreviewFeatures: ["extendedWhereUnique"]    }  },  auth: {    userEntity: User,    methods: {      usernameAndPassword: {}    },    onAuthFailedRedirectTo: "/login",    onAuthSucceededRedirectTo: "/"  }}route LoginRoute { path: "/login", to: LoginPage }page LoginPage { component: import Login from "@src/pages/auth/Login.jsx" }route SignupRoute { path: "/signup", to: SignupPage }page SignupPage { component: import Signup from "@src/pages/auth/Signup.jsx" }entity User {=psl    id      Int      @id @default(autoincrement())    name    String    email   String   @unique    pass    String    Lessons Lesson[]    Exams   Exam[]    Plan    Plan[]psl=}entity Lesson {=psl    id         Int    @id @default(autoincrement())    name       String    content    String    discipline String    User       User   @relation(fields: [userId], references: [id])    userId     Intpsl=}entity Exam {=psl    id     Int  @id @default(autoincrement())    score  Int    User   User @relation(fields: [userId], references: [id])    userId Intpsl=}entity Plan {=psl    id     Int    @id @default(autoincrement())    name   String    User   User   @relation(fields: [userId], references: [id])    userId Int    @uniquepsl=}action createUser {  fn: import { createUser } from "@src/actions.js",  entities: [User, Plan] }action createLesson {  fn: import { createLesson } from "@src/actions.js",  entities: [Lesson] }action createExam {  fn: import { createExam } from "@src/actions.js",  entities: [Exam, User] }query getUser {  fn: import { getUser } from "@src/queries.js",  entities: [User] }query getLesson {  fn: import { getLesson } from "@src/queries.js",  entities: [Lesson, User] }query getExam {  fn: import { getExam } from "@src/queries.js",  entities: [Exam, User] }route HomepageRoute { path: "/", to: Homepage }page Homepage {  component: import Homepage from "@src/pages/Homepage.jsx",  authRequired: false }route DashboardRoute { path: "/dashboard", to: Dashboard }page Dashboard {  component: import Dashboard from "@src/pages/Dashboard.jsx",  authRequired: true }route LessonRoute { path: "/lesson/:lessonId", to: Lesson }page Lesson {  component: import Lesson from "@src/pages/Lesson.jsx",  authRequired: true }route ExamRoute { path: "/exam/:examId", to: Exam }page Exam {  component: import Exam from "@src/pages/Exam.jsx",  authRequired: false }